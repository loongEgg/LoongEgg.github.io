<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C#/Udp-1.收发通信基础库的实现</title>
    <url>/2020/06/13/C-Udp-1-%E6%94%B6%E5%8F%91%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E5%BA%93%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="基本UDP收发通信基础库的实现"><a href="#基本UDP收发通信基础库的实现" class="headerlink" title="基本UDP收发通信基础库的实现"></a>基本UDP收发通信基础库的实现</h2><div class="mdui-video-container">
<iframe  width="740" height="576"  src="//player.bilibili.com/player.html?aid=286020112&bvid=BV1Yf4y1y7Ca&cid=202720541&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>
<div class="mdui-video-container">
<iframe  width="740" height="576"  src="//player.bilibili.com/player.html?aid=456001401&bvid=BV1s5411W78Z&cid=203299869&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>
<div class="mdui-video-container">
<iframe  width="740" height="576"  src="//player.bilibili.com/player.html?aid=541118085&bvid=BV1si4y1G7w4&cid=203314215&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
</div>
---
## 前言
### 1.系列主题
本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender & Receiver using json file to configure

<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5.发行版获取"></a>5.发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="UdpReceivedEventArgs-cs"><a href="#UdpReceivedEventArgs-cs" class="headerlink" title="UdpReceivedEventArgs.cs"></a>UdpReceivedEventArgs.cs</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Udp接收事件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">delegate</span> <span class="keyword">void</span> <span class="title">UdpReceivedEvent</span>(<span class="params"><span class="keyword">object</span> sender, UdpReceivedEventArgs args</span>)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Udp接收事件参数</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">UdpReceivedEventArgs</span>: <span class="title">EventArgs</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 接收到的缓存信息</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">byte</span>[] Buffer &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 默认构造器</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="buffer"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">UdpReceivedEventArgs</span>(<span class="params"><span class="keyword">byte</span>[] buffer</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        Buffer = buffer;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="UdpReceiver-cs"><a href="#UdpReceiver-cs" class="headerlink" title="UdpReceiver.cs"></a>UdpReceiver.cs</h2><h3 id="1-Events"><a href="#1-Events" class="headerlink" title="1. Events"></a>1. Events</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 接收到新消息事件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">event</span> UdpReceivedEvent MessageRecieved;</span><br></pre></td></tr></table></figure>
<h3 id="2-Fields"><a href="#2-Fields" class="headerlink" title="2. Fields"></a>2. Fields</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 默认配置文件</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> DefaultConfigFile = <span class="string">"config.udpreceiver.json"</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 使用说明</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">readonly</span> <span class="keyword">string</span> Usage =</span><br><span class="line">    Environment.NewLine + <span class="string">"    Usage: -p port  [-g groupaddress] [-t tag]"</span> +</span><br><span class="line">    Environment.NewLine + <span class="string">"           -p port number listen to"</span> +</span><br><span class="line">    Environment.NewLine + <span class="string">"           -g group address(224.0.0.0, 239.255.255.255)"</span> +</span><br><span class="line">    Environment.NewLine + <span class="string">"           -t tag"</span> +</span><br><span class="line">    Environment.NewLine + <span class="string">"     Info: config options will be saved as config.udpreceiver.json"</span>;</span><br></pre></td></tr></table></figure>

<h3 id="3-Properties"><a href="#3-Properties" class="headerlink" title="3. Properties"></a>3. Properties</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 端口号</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> Port &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 组地址</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> GroupAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 接收器标识</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> Tag &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="4-Constructors"><a href="#4-Constructors" class="headerlink" title="4. Constructors"></a>4. Constructors</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 默认构造函数</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UdpReceiver</span>(<span class="params"></span>)</span> &#123; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 创建一个新的接收器</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UdpReceiver</span>(<span class="params"><span class="keyword">int</span> port, <span class="keyword">string</span> groupAddress = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GroupAddress = groupAddress;</span><br><span class="line">    Port = port;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="5-Public-Methods"><a href="#5-Public-Methods" class="headerlink" title="5. Public Methods"></a>5. Public Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 默认控制台程序实现</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="useDefaultConfig"&gt;</span>default=true, 使用默认的配置文件<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UdpReceiver <span class="title">DefaultConsole</span>(<span class="params"><span class="keyword">bool</span> useDefaultConfig = <span class="literal">true</span></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">string</span> hostName = Dns.GetHostName();</span><br><span class="line">           IPAddress[] IPs = Dns.GetHostAddresses(hostName);</span><br><span class="line">           Logger.Info(<span class="string">$"HostName: <span class="subst">&#123;hostName&#125;</span>, Local IP(s):"</span>);</span><br><span class="line">           <span class="keyword">if</span> (IPs.Any())</span><br><span class="line">           &#123;</span><br><span class="line">               IPs.ToList().ForEach(ip =&gt;</span><br><span class="line">               &#123;</span><br><span class="line">                   <span class="keyword">if</span> (ip.AddressFamily == AddressFamily.InterNetwork)</span><br><span class="line">                       Logger.Info(<span class="string">$"    <span class="subst">&#123;ip.ToString()&#125;</span>"</span>);</span><br><span class="line">               &#125;);</span><br><span class="line">           &#125;</span><br><span class="line">           Logger.Info(<span class="string">$"Try reading default UDP receiver config:<span class="subst">&#123;DefaultConfigFile&#125;</span>"</span>);</span><br><span class="line"></span><br><span class="line">           UdpReceiver receiver = <span class="literal">null</span>;</span><br><span class="line">           <span class="keyword">if</span> (useDefaultConfig &amp;&amp; File.Exists(DefaultConfigFile))</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">using</span> (StreamReader reader = File.OpenText(DefaultConfigFile))</span><br><span class="line">               &#123;</span><br><span class="line">                   JsonSerializer serializer = JsonSerializer.Create();</span><br><span class="line">                   receiver = serializer.Deserialize(reader, <span class="keyword">typeof</span>(UdpReceiver)) <span class="keyword">as</span> UdpReceiver;</span><br><span class="line">                   <span class="keyword">if</span> (receiver != <span class="literal">null</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                       Logger.Info(receiver.ToString());</span><br><span class="line">                       Logger.Info(<span class="string">"Reading default config OK."</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">else</span></span><br><span class="line">           &#123;</span><br><span class="line">               Logger.Warn(<span class="string">"Reading default UDP receiver config falied!"</span>);</span><br><span class="line">               Logger.Info(Usage);</span><br><span class="line">               <span class="keyword">bool</span> unconfig = <span class="literal">true</span>;</span><br><span class="line">               <span class="keyword">do</span></span><br><span class="line">               &#123;</span><br><span class="line">                   Logger.Info(<span class="string">"Input udp config options:"</span>);</span><br><span class="line">                   <span class="keyword">string</span> command = Console.ReadLine();</span><br><span class="line">                   <span class="keyword">string</span>[] args = command.Split(<span class="string">' '</span>);</span><br><span class="line">                   <span class="keyword">int</span> port;</span><br><span class="line">                   <span class="keyword">string</span> <span class="keyword">group</span>;</span><br><span class="line">                   <span class="keyword">string</span> tag;</span><br><span class="line">                   ParseCommandOptions(args, <span class="keyword">out</span> port, <span class="keyword">out</span> <span class="keyword">group</span>, <span class="keyword">out</span> tag);</span><br><span class="line">                   <span class="keyword">if</span> (port != <span class="number">0</span>)</span><br><span class="line">                   &#123;</span><br><span class="line">                       receiver = <span class="keyword">new</span> UdpReceiver &#123; Port = port, GroupAddress = <span class="keyword">group</span>, Tag = tag &#125;;</span><br><span class="line">                       Logger.Info(<span class="string">"Udp initial as: "</span> + receiver.ToString() + <span class="string">"?"</span>);</span><br><span class="line">                       Logger.Info(<span class="string">$"Enter Y/y to confirm, and save as [<span class="subst">&#123;DefaultConfigFile&#125;</span>]. OR any other keys to reinput."</span>);</span><br><span class="line">                       unconfig = !(Console.ReadLine().ToLower() == <span class="string">"y"</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">                   <span class="keyword">else</span></span><br><span class="line">                   &#123;</span><br><span class="line">                       Logger.Warn(<span class="string">"option missed: -p [port number] "</span>);</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125; <span class="keyword">while</span> (unconfig);</span><br><span class="line">               <span class="keyword">string</span> json = JsonConvert.SerializeObject(receiver, Formatting.Indented);</span><br><span class="line">               <span class="keyword">using</span> (StreamWriter writer = File.CreateText(DefaultConfigFile))</span><br><span class="line">               &#123;</span><br><span class="line">                   writer.Write(json);</span><br><span class="line">                   writer.Flush();</span><br><span class="line">                   writer.Close();</span><br><span class="line">               &#125;</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="keyword">return</span> receiver;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 接收器工作</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">ReceiveAsync</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">using</span> (<span class="keyword">var</span> client = <span class="keyword">new</span> UdpClient(Port))</span><br><span class="line">           &#123;</span><br><span class="line">               <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   Logger.Debug(<span class="string">$"Join Multicast Group = <span class="subst">&#123;GroupAddress&#125;</span>"</span>);</span><br><span class="line">                   client.JoinMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               Logger.Debug(<span class="string">"Start Listening...Sending in [stop] to stop listening"</span>);</span><br><span class="line">               <span class="keyword">bool</span> completed;</span><br><span class="line">               <span class="keyword">do</span></span><br><span class="line">               &#123;</span><br><span class="line">                   UdpReceiveResult result = <span class="keyword">await</span> client.ReceiveAsync();</span><br><span class="line">                   <span class="keyword">byte</span>[] datagram = result.Buffer;</span><br><span class="line">                   MessageRecieved?.Invoke(<span class="keyword">this</span>, <span class="keyword">new</span> UdpReceivedEventArgs(datagram));</span><br><span class="line">                   <span class="keyword">string</span> received = Encoding.UTF8.GetString(datagram);</span><br><span class="line">                   Logger.Info(<span class="string">$"Received (from <span class="subst">&#123;result.RemoteEndPoint.Address&#125;</span>) &lt; <span class="subst">&#123;received&#125;</span>"</span>);</span><br><span class="line">                   completed = (received.ToLower() == <span class="string">"stop"</span>);</span><br><span class="line">               &#125; <span class="keyword">while</span> (!completed);</span><br><span class="line"></span><br><span class="line">               <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">               &#123;</span><br><span class="line">                   client.DropMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">               &#125;</span><br><span class="line"></span><br><span class="line">               Logger.Warn(<span class="string">"Listening stop command received."</span>);</span><br><span class="line">               Logger.Warn(<span class="string">"Udp is stopping..."</span>);</span><br><span class="line">           &#125;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> 显示Tag、Port、GroupAddress等详细信息</span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">       <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">       <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>       &#123;</span><br><span class="line">           <span class="keyword">return</span> <span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(Port)&#125;</span>=<span class="subst">&#123;Port&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(GroupAddress)&#125;</span>=<span class="subst">&#123;GroupAddress ?? <span class="string">"null"</span>&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(Tag)&#125;</span>=<span class="subst">&#123;(Tag ?? <span class="string">"null"</span>)&#125;</span>"</span>;</span><br><span class="line">       &#125;</span><br></pre></td></tr></table></figure>
<h3 id="6-Private-Methods"><a href="#6-Private-Methods" class="headerlink" title="6. Private Methods"></a>6. Private Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 将数组转义到确切的UDP配置定义</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="args"&gt;</span>命令参数<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="group"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="tag"&gt;</span>识别标签<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">ParseCommandOptions</span>(<span class="params"><span class="keyword">string</span>[] args, <span class="keyword">out</span> <span class="keyword">int</span> port, <span class="keyword">out</span> <span class="keyword">string</span> <span class="keyword">group</span>, <span class="keyword">out</span> <span class="keyword">string</span> tag</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    UdpHelper.TryParseCommandParam(args, <span class="string">"-p"</span>, <span class="keyword">out</span> port);</span><br><span class="line">    UdpHelper.TryParseCommandParam(args, <span class="string">"-g"</span>, <span class="keyword">out</span> <span class="keyword">group</span>);</span><br><span class="line">    UdpHelper.TryParseCommandParam(args, <span class="string">"-t"</span>, <span class="keyword">out</span> tag);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="UdpSender-cs"><a href="#UdpSender-cs" class="headerlink" title="UdpSender.cs"></a>UdpSender.cs</h2><h3 id="1-Fields"><a href="#1-Fields" class="headerlink" title="1.Fields"></a>1.Fields</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> IP端口</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">private</span> IPEndPoint EndPoint;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Udp端口</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">private</span> UdpClient UdpClient;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">const</span> <span class="keyword">string</span> DefaultConfigFile = <span class="string">"config.udpsender.json"</span>;</span><br></pre></td></tr></table></figure>

<h3 id="2-Properties"><a href="#2-Properties" class="headerlink" title="2.Properties"></a>2.Properties</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 端口号</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> Port &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="number">5566</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 组播</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> IsBroadCast &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 组地址</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> GroupAddress &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 主机名字</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> HostName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 小端在前？</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> LittleEndian &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> IpV6模式？</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">bool</span> IsIpV6 &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 标识</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> Tag &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Constructors"><a href="#3-Constructors" class="headerlink" title="3.Constructors"></a>3.Constructors</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> Udp发送器的构造器, 创建后不要忘记调用<span class="doctag">&lt;see cref="Init()"/&gt;</span>进行初始化</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isBroadcast"&gt;</span>组播?<span class="doctag">&lt;/param&gt;</span> </span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isIpV6"&gt;</span>IpV6模式?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> [<span class="meta">Obsolete(<span class="meta-string">"直接使用方法CreatFromConfig()更香，使用默认构造器，初始化时指定属性"</span>)</span>]</span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">UdpSender</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">bool</span> isBroadcast = <span class="literal">true</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">string</span> groupAddress = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">bool</span> isIpV6 = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     Port = port;</span><br><span class="line">     IsBroadCast = isBroadcast;</span><br><span class="line">     GroupAddress = groupAddress;</span><br><span class="line">     IsIpV6 = IsIpV6; </span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 默认构造器, 创建后不要忘记调用<span class="doctag">&lt;see cref="Init()"/&gt;</span>进行初始化</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="title">UdpSender</span>(<span class="params"></span>)</span> &#123; &#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Public-Methods"><a href="#3-Public-Methods" class="headerlink" title="3.Public Methods"></a>3.Public Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 从指定的配置文件创建一个发送器</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="path"&gt;</span>配置文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> UdpSender <span class="title">CreatFromConfig</span>(<span class="params"><span class="keyword">string</span> path = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="keyword">if</span> (path == <span class="literal">null</span>)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">if</span> (File.Exists(DefaultConfigFile))</span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">using</span> (StreamReader reader = File.OpenText(DefaultConfigFile))</span><br><span class="line">             &#123;</span><br><span class="line">                 JsonSerializer serializer = JsonSerializer.Create();</span><br><span class="line">                 <span class="keyword">if</span> (serializer.Deserialize(reader, <span class="keyword">typeof</span>(UdpSender)) <span class="keyword">is</span> UdpSender sender)</span><br><span class="line">                 &#123;</span><br><span class="line">                     Logger.Info(<span class="string">$"Reading default [<span class="subst">&#123;DefaultConfigFile&#125;</span>] config OK."</span>);</span><br><span class="line">                     <span class="keyword">return</span> sender;</span><br><span class="line">                 &#125;</span><br><span class="line">                 <span class="keyword">else</span></span><br><span class="line">                 &#123;</span><br><span class="line">                     <span class="keyword">string</span> message = <span class="string">$"UdpSender creat from default config file [<span class="subst">&#123;DefaultConfigFile&#125;</span>] failed"</span>;</span><br><span class="line">                     Logger.Warn(message);</span><br><span class="line">                     <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(message);</span><br><span class="line">                 &#125;</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             Logger.Warn(<span class="string">$"Reading default config file [<span class="subst">&#123;DefaultConfigFile&#125;</span>] failed."</span>);</span><br><span class="line">             Logger.Warn(<span class="string">"UdpSender creat with default property"</span>);</span><br><span class="line">             <span class="keyword">return</span> <span class="keyword">new</span> UdpSender();</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">else</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">using</span> (StreamReader reader = File.OpenText(path))</span><br><span class="line">         &#123;</span><br><span class="line">             JsonSerializer serializer = JsonSerializer.Create();</span><br><span class="line">             <span class="keyword">if</span> (serializer.Deserialize(reader, <span class="keyword">typeof</span>(UdpSender)) <span class="keyword">is</span> UdpSender sender)</span><br><span class="line">             &#123;</span><br><span class="line">                 Logger.Info(<span class="string">"Reading default config OK."</span>);</span><br><span class="line">                 <span class="keyword">return</span> sender;</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">             &#123;</span><br><span class="line">                 <span class="keyword">string</span> message = <span class="string">$"UdpSender creat from specifit config file [<span class="subst">&#123;path&#125;</span>] failed"</span>;</span><br><span class="line">                 Logger.Warn(message);</span><br><span class="line">                 <span class="keyword">throw</span> <span class="keyword">new</span> ArgumentException(message);</span><br><span class="line">             &#125;</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 发送信息</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="message"&gt;</span>待发送的信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">SendAsync</span>(<span class="params"><span class="keyword">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="keyword">if</span> (EndPoint == <span class="literal">null</span> || UdpClient == <span class="literal">null</span>)</span><br><span class="line">         <span class="keyword">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="string">"Init() before first sending"</span>);</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">         Logger.Info(<span class="string">$"Send &gt; <span class="subst">&#123;message&#125;</span>"</span>);</span><br><span class="line">         <span class="keyword">byte</span>[] datagram = Encoding.UTF8.GetBytes(message);</span><br><span class="line">         <span class="keyword">await</span> UdpClient.SendAsync(datagram, datagram.Length, EndPoint);</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">throw</span> ex;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 初始化端口</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">Init</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">         EndPoint = GetIPEndPoint(Port, IsBroadCast, HostName, GroupAddress, IsIpV6).Result;</span><br><span class="line">         UdpClient = <span class="keyword">new</span> UdpClient</span><br><span class="line">         &#123;</span><br><span class="line">             EnableBroadcast = IsBroadCast</span><br><span class="line">         &#125;;</span><br><span class="line">         <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span> &amp;&amp; GroupAddress.ToLower() != <span class="string">"null"</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             UdpClient.JoinMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">         &#125;</span><br><span class="line">         Logger.Info(<span class="string">"Udp sender initialized"</span>);</span><br><span class="line">         Logger.Info(<span class="keyword">this</span>.ToString() );</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">throw</span> ex;</span><br><span class="line">     &#125;</span><br><span class="line"> &#125;</span><br><span class="line"></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 将配置属性转为字符串</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span> =&gt;</span><br><span class="line">     Environment.NewLine + <span class="string">$"UdpSender: "</span></span><br><span class="line">     + Environment.NewLine + <span class="string">$"    <span class="subst">&#123;<span class="keyword">nameof</span>(Port)&#125;</span>=<span class="subst">&#123;Port&#125;</span>"</span></span><br><span class="line">     + Environment.NewLine + <span class="string">$"    <span class="subst">&#123;<span class="keyword">nameof</span>(IsBroadCast)&#125;</span>=<span class="subst">&#123;IsBroadCast&#125;</span>"</span></span><br><span class="line">     + Environment.NewLine + <span class="string">$"    <span class="subst">&#123;<span class="keyword">nameof</span>(HostName)&#125;</span>=<span class="subst">&#123;HostName&#125;</span>"</span></span><br><span class="line">     + Environment.NewLine + <span class="string">$"    <span class="subst">&#123;<span class="keyword">nameof</span>(GroupAddress)&#125;</span>=<span class="subst">&#123;GroupAddress&#125;</span>"</span></span><br><span class="line">     + Environment.NewLine + <span class="string">$"    <span class="subst">&#123;<span class="keyword">nameof</span>(IsIpV6)&#125;</span>=<span class="subst">&#123;IsIpV6&#125;</span>"</span>;</span><br><span class="line"> <span class="comment">/*--------------------------------- Private Methods -------------------------------*/</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> 获取指定的IP端口</span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isBroadcast"&gt;</span>组播?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="hostName"&gt;</span>主机名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isIpV6"&gt;</span>IpV6模式?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"> <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"> <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;IPEndPoint&gt; <span class="title">GetIPEndPoint</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">bool</span> isBroadcast,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">string</span> hostName,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">string</span> groupAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">     <span class="keyword">bool</span> isIpV6</span>)</span></span><br><span class="line"><span class="function"></span> &#123;</span><br><span class="line">     IPEndPoint endpoint;</span><br><span class="line">     <span class="keyword">try</span></span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">if</span> (isBroadcast)</span><br><span class="line">         &#123;</span><br><span class="line">             endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Broadcast, port);</span><br><span class="line">             Logger.Info(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(isBroadcast)&#125;</span>=<span class="subst">&#123;isBroadcast&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(port)&#125;</span>=<span class="subst">&#123;port&#125;</span> "</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (hostName != <span class="literal">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             IPHostEntry hostEntry = <span class="keyword">await</span> Dns.GetHostEntryAsync(hostName);</span><br><span class="line">             IPAddress address;</span><br><span class="line">             <span class="keyword">if</span> (isIpV6)</span><br><span class="line">             &#123;</span><br><span class="line">                 address = hostEntry.AddressList.Where(</span><br><span class="line">                     a =&gt; a.AddressFamily == AddressFamily.InterNetworkV6</span><br><span class="line">                 ).FirstOrDefault();</span><br><span class="line">             &#125;</span><br><span class="line">             <span class="keyword">else</span></span><br><span class="line">             &#123;</span><br><span class="line">                 address = hostEntry.AddressList.Where(</span><br><span class="line">                     a =&gt; a.AddressFamily == AddressFamily.InterNetwork</span><br><span class="line">                 ).FirstOrDefault();</span><br><span class="line">             &#125;</span><br><span class="line">             endpoint = <span class="keyword">new</span> IPEndPoint(address, port);</span><br><span class="line">             Logger.Info(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(hostName)&#125;</span>=<span class="subst">&#123;hostName&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(address)&#125;</span>=<span class="subst">&#123;address&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(isIpV6)&#125;</span>=<span class="subst">&#123;isIpV6&#125;</span>"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span> <span class="keyword">if</span> (groupAddress != <span class="literal">null</span>)</span><br><span class="line">         &#123;</span><br><span class="line">             endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(groupAddress), port);</span><br><span class="line">             Logger.Info(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(groupAddress)&#125;</span>=<span class="subst">&#123;groupAddress&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(port)&#125;</span>=<span class="subst">&#123;port&#125;</span> "</span>);</span><br><span class="line"></span><br><span class="line">         &#125;</span><br><span class="line">         <span class="keyword">else</span></span><br><span class="line">         &#123;</span><br><span class="line">             <span class="keyword">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(hostName)&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(isBroadcast)&#125;</span>, or <span class="subst">&#123;<span class="keyword">nameof</span>(groupAddress)&#125;</span> must be set"</span>);</span><br><span class="line">         &#125;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">     &#123;</span><br><span class="line">         <span class="keyword">throw</span> ex;</span><br><span class="line">     &#125;</span><br><span class="line">     <span class="keyword">return</span> endpoint;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure>
<p>~</p>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
        <tag>Event</tag>
        <tag>EventArgs</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-3.class类到json的序列化与反序列化</title>
    <url>/2020/06/13/C-Udp-3-class%E7%B1%BB%E5%88%B0json%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="class类到json的序列化与反序列化"><a href="#class类到json的序列化与反序列化" class="headerlink" title="class类到json的序列化与反序列化"></a>class类到json的序列化与反序列化</h2><iframe   width="740" height="576"  src="//player.bilibili.com/player.html?aid=841027492&bvid=BV1v54y1B73D&cid=203355673&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1.系列主题"></a>1.系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5.发行版获取"></a>5.发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="基本json文件"><a href="#基本json文件" class="headerlink" title="基本json文件"></a>基本json文件</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"PackName"</span>: <span class="string">"AltitudePack"</span>,</span><br><span class="line">  <span class="attr">"PackID"</span>: <span class="number">233</span>,</span><br><span class="line">  <span class="attr">"Items"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Name"</span>: <span class="string">"GPS_Alt"</span>,</span><br><span class="line">      <span class="attr">"Unit"</span>: <span class="string">"m"</span>,</span><br><span class="line">      <span class="attr">"Length"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"BigEndian"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Resolution"</span>: <span class="number">1.0</span>,</span><br><span class="line">      <span class="attr">"Signed"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"Maximum"</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">"Minimum"</span>: <span class="number">-100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Name"</span>: <span class="string">"BRAVO_Alt"</span>,</span><br><span class="line">      <span class="attr">"Unit"</span>: <span class="string">"m"</span>,</span><br><span class="line">      <span class="attr">"Length"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"BigEndian"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Resolution"</span>: <span class="number">0.5</span>,</span><br><span class="line">      <span class="attr">"Signed"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Maximum"</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">"Minimum"</span>: <span class="number">-100</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单个数据项定义"><a href="#单个数据项定义" class="headerlink" title="单个数据项定义"></a>单个数据项定义</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com </span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/12 20:24:28</span></span><br><span class="line"><span class="comment"> | 主要用途：数据包中单个数据项的定义</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单个数据项定义</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ItemConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据名称</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 单位</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Unit &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 字节长度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Length &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 大端在前？</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> BigEndian &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据精度，精度乘以传进来的数据=实际的数值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Resolution &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 有无符号？</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> Signed &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据的最大值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Maximum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Minimum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打印数据定义信息到字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>格式化后的定义信息<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">$"Name=<span class="subst">&#123;Name&#125;</span>, Unit=<span class="subst">&#123;Unit&#125;</span>, Resolution=<span class="subst">&#123;Resolution&#125;</span>, Signed="</span> </span><br><span class="line">                + (Signed ? <span class="string">"true"</span> : <span class="string">"false"</span>) </span><br><span class="line">                + <span class="string">$", Maximum=<span class="subst">&#123;Maximum&#125;</span>, Minimum=<span class="subst">&#123;Minimum&#125;</span>"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单个json文件对应的class定义"><a href="#单个json文件对应的class定义" class="headerlink" title="单个json文件对应的class定义"></a>单个json文件对应的class定义</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com</span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/12 20:41:39</span></span><br><span class="line"><span class="comment"> | 主要用途：从json文件读取数据包协议</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 数据包，可以直接从json文件反序列化</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonPackConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前包的名字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> PackName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"[Undefined]"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前包的ID号, 注意为单字节无符号数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">byte</span> PackID &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 包的字节总长度, 注意最大长度为255</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">byte</span> Length</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (Items.Any())</span><br><span class="line">                &#123;</span><br><span class="line">                    Items.ForEach(i =&gt; count += i.Length);</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">byte</span>)count;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据对象定义的集合</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;ItemConfig&gt; Items &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 从指定的文件反序列化数据包的定义</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="path"&gt;</span>文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>反序列化后的数据包<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JsonPackConfig <span class="title">DeserializeFromFile</span>(<span class="params"><span class="keyword">string</span> path</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">using</span> (StreamReader reader = File.OpenText(path))</span><br><span class="line">            &#123;</span><br><span class="line">                JsonSerializer serializer = JsonSerializer.Create();</span><br><span class="line">                <span class="keyword">var</span> pack = serializer.Deserialize(reader, <span class="keyword">typeof</span>(JsonPackConfig)) <span class="keyword">as</span> JsonPackConfig;</span><br><span class="line">                <span class="keyword">return</span> pack;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将协议转换为json字符串形式</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">SerializeToJsonString</span>(<span class="params"></span>)</span> =&gt; JsonConvert.SerializeObject(<span class="keyword">this</span>, Formatting.Indented);</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将所有的数据协议项转换为一个字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            builder.AppendLine(<span class="string">$"PackName=<span class="subst">&#123;PackName&#125;</span>, PackID=<span class="subst">&#123;PackID&#125;</span>:"</span>);</span><br><span class="line">            <span class="keyword">if</span> (Items.Any())</span><br><span class="line">            &#123;</span><br><span class="line">                Items.ForEach(</span><br><span class="line">                    i =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        builder.AppendLine(i.ToString());</span><br><span class="line">                    &#125;);</span><br><span class="line">                <span class="keyword">return</span> builder.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"JsonPackDefinition is undefined"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运用实例"><a href="#运用实例" class="headerlink" title="运用实例"></a>运用实例</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore.JsonDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                JsonPackConfig pack = JsonPackConfig.DeserializeFromFile(<span class="string">"AltPack.json"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"Desializing..."</span>);</span><br><span class="line">                Console.WriteLine(pack.ToString());</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">"Serializing..."</span>);</span><br><span class="line">                Console.WriteLine(pack.SerializeToJsonString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(ex.Message);</span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line">            Debugger.Break();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
        <tag>json</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-4.WPF发送端界面设计</title>
    <url>/2020/06/13/C-Udp-4-WPF%E5%8F%91%E9%80%81%E7%AB%AF%E7%95%8C%E9%9D%A2%E8%AE%BE%E8%AE%A1/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>创建WPF/C#的UdpSender客户端</li>
<li>使用MVVM模式完成Name和Unit的绑定</li>
<li>datacontext的设计时绑定和运行时绑定</li>
<li>xaml语法提醒和实时效果显示</li>
</ul>
<hr>
<iframe width="740" height="576" src="//player.bilibili.com/player.html?aid=583616014&bvid=BV1Qz4y1Q723&cid=204227585&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1.系列主题"></a>1.系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.DependencyInjection</strong> IoC container , you can get it from nuget or my <a href="https://github.com/loongEgg/DependencyInjection" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.MvvmCore</strong>  an OpenSource cross-platform &amp; cross-framework Mvvm lib , you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.MvvmCore" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5.发行版获取"></a>5.发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="ViewModels"><a href="#ViewModels" class="headerlink" title="ViewModels"></a>ViewModels</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.MvvmCore;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com </span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/13 17:00:07</span></span><br><span class="line"><span class="comment"> | 主要用途：</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpJsonSender.WPF</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AltViewModel</span> : <span class="title">ViewModel</span></span><br><span class="line">    &#123; </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _Name; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _Name, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> _Name; </span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Unit</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _Unit; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _Unit, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> _Unit;</span><br><span class="line">         </span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Maximum</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _Maximum; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _Maximum, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> _Maximum;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Minimum</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _Minimum; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _Minimum, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> _Minimum;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Readout</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _Readout; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _Readout, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">double</span> _Readout;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.MvvmCore;</span><br><span class="line"><span class="keyword">using</span> LoongEgg.UdpCore;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com </span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/13 17:11:16</span></span><br><span class="line"><span class="comment"> | 主要用途：</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpJsonSender.WPF</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">AltPackViewModel</span> : <span class="title">ViewModel</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">internal</span> <span class="keyword">static</span> AltPackViewModel DesignInstance &#123; <span class="keyword">get</span>; &#125;</span><br><span class="line">        = <span class="keyword">new</span> AltPackViewModel(</span><br><span class="line">            JsonPackConfig.DeserializeFromFile(</span><br><span class="line">                <span class="string">@"E:\Published\LoongEgg.UdpCore\UdpJsonSender.WPF\AltPack.json"</span>)); <span class="comment">// 根据你自己实际的文件路径写</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> PackName</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _PackName; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _PackName, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">string</span> _PackName;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">byte</span> PackId</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> _PackId; &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetProperty(<span class="keyword">ref</span> _PackId, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">byte</span> _PackId;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> AltViewModel Gps &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">        <span class="keyword">public</span> AltViewModel Baro &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">AltPackViewModel</span>(<span class="params">JsonPackConfig config</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Gps = <span class="keyword">new</span> AltViewModel</span><br><span class="line">            &#123;</span><br><span class="line">                Name = config.Items[<span class="number">0</span>].Name,</span><br><span class="line">                Unit = config.Items[<span class="number">0</span>].Unit,</span><br><span class="line">                Minimum = config.Items[<span class="number">0</span>].Minimum,</span><br><span class="line">                Maximum = config.Items[<span class="number">0</span>].Maximum</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            Baro = <span class="keyword">new</span> AltViewModel</span><br><span class="line">            &#123;</span><br><span class="line">                Name = config.Items[<span class="number">1</span>].Name,</span><br><span class="line">                Unit = config.Items[<span class="number">1</span>].Unit,</span><br><span class="line">                Minimum = config.Items[<span class="number">1</span>].Minimum,</span><br><span class="line">                Maximum = config.Items[<span class="number">1</span>].Maximum</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            PackName = config.PackName;</span><br><span class="line">            PackId = config.PackID;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="App启动设置"><a href="#App启动设置" class="headerlink" title="App启动设置"></a>App启动设置</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> LoongEgg.UdpCore;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpJsonSender.WPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> App.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStartup</span>(<span class="params">StartupEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnStartup(e);</span><br><span class="line">            IoC = <span class="keyword">new</span> Container();</span><br><span class="line">            IoC.AddOrUpdate(<span class="keyword">new</span> AltPackViewModel(</span><br><span class="line">                JsonPackConfig.DeserializeFromFile(AppDomain.CurrentDomain.BaseDirectory + <span class="string">"AltPack.json"</span>)));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 依赖注入容器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Container IoC &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="前台绑定"><a href="#前台绑定" class="headerlink" title="前台绑定"></a>前台绑定</h2><p>注意用来提供语法提示的设计时绑定 <code>d:DataContext=&quot;{x:Static local:AltPackViewModel.DesignInstance}&quot;</code></p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Window</span></span></span><br><span class="line"><span class="tag">    <span class="attr">x:Class</span>=<span class="string">"UdpJsonSender.WPF.MainWindow"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml/presentation"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:x</span>=<span class="string">"http://schemas.microsoft.com/winfx/2006/xaml"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:d</span>=<span class="string">"http://schemas.microsoft.com/expression/blend/2008"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:local</span>=<span class="string">"clr-namespace:UdpJsonSender.WPF"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">xmlns:mc</span>=<span class="string">"http://schemas.openxmlformats.org/markup-compatibility/2006"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Title</span>=<span class="string">"MainWindow"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Width</span>=<span class="string">"600"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Height</span>=<span class="string">"300"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">d:DataContext</span>=<span class="string">"&#123;x:Static local:AltPackViewModel.DesignInstance&#125;"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">FontSize</span>=<span class="string">"26"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">Foreground</span>=<span class="string">"Black"</span></span></span><br><span class="line"><span class="tag">    <span class="attr">mc:Ignorable</span>=<span class="string">"d"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Grid</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">RowDefinition</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">Grid.RowDefinitions</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">StackPanel</span></span></span><br><span class="line"><span class="tag">            <span class="attr">Grid.Row</span>=<span class="string">"0"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">HorizontalAlignment</span>=<span class="string">"Center"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span></span></span><br><span class="line"><span class="tag">            <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Run</span>&gt;</span>PackName:<span class="tag">&lt;/<span class="name">Run</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding PackName&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Run</span>&gt;</span>, PackID:<span class="tag">&lt;/<span class="name">Run</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding PackId&#125;"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ListBox</span> <span class="attr">Grid.Row</span>=<span class="string">"1"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">DataContext</span>=<span class="string">"&#123;Binding Gps&#125;"</span> <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Width</span>=<span class="string">"250"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Name&#125;"</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Readout, StringFormat=&#123;&#125;&#123;0:f1&#125;&#125;"</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Unit, StringFormat=(&#123;0&#125;)&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Width</span>=<span class="string">"300"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Maximum</span>=<span class="string">"&#123;Binding Maximum&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Minimum</span>=<span class="string">"&#123;Binding Minimum&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Value</span>=<span class="string">"&#123;Binding Readout&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ListBoxItem</span>&gt;</span></span><br><span class="line"></span><br><span class="line">            <span class="tag">&lt;<span class="name">ListBoxItem</span> <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">StackPanel</span> <span class="attr">DataContext</span>=<span class="string">"&#123;Binding Baro&#125;"</span> <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">TextBlock</span> <span class="attr">Width</span>=<span class="string">"250"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Name&#125;"</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Readout, StringFormat=&#123;&#125;&#123;0:f1&#125;&#125;"</span> /&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">Run</span> <span class="attr">Text</span>=<span class="string">"&#123;Binding Unit, StringFormat=(&#123;0&#125;)&#125;"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">TextBlock</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">Slider</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Width</span>=<span class="string">"300"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">VerticalAlignment</span>=<span class="string">"Center"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Maximum</span>=<span class="string">"&#123;Binding Maximum&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Minimum</span>=<span class="string">"&#123;Binding Minimum&#125;"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Orientation</span>=<span class="string">"Horizontal"</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">Value</span>=<span class="string">"&#123;Binding Readout&#125;"</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">StackPanel</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">ListBoxItem</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">ListBox</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">Grid</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Window</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="DataContext后台设置"><a href="#DataContext后台设置" class="headerlink" title="DataContext后台设置"></a>DataContext后台设置</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpJsonSender.WPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> MainWindow.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">MainWindow</span> : <span class="title">Window</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="title">MainWindow</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            InitializeComponent();</span><br><span class="line">            DataContext = (Application.Current <span class="keyword">as</span> App).IoC.Get&lt;AltPackViewModel&gt;();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>json</tag>
        <tag>WPF</tag>
        <tag>MVVM</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-2.Linux端收发通信客户端的创建</title>
    <url>/2020/06/13/C-Udp-2-Linux%E7%AB%AF%E6%94%B6%E5%8F%91%E9%80%9A%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="基本UDP收发通信客户端的创建"><a href="#基本UDP收发通信客户端的创建" class="headerlink" title="基本UDP收发通信客户端的创建"></a>基本UDP收发通信客户端的创建</h2><iframe  width="740" height="576"  src="//player.bilibili.com/player.html?aid=968510651&bvid=BV14p4y1D7tQ&cid=203335748&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1.系列主题"></a>1.系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5.发行版获取"></a>5.发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<h2 id="在ubuntu创建工程"><a href="#在ubuntu创建工程" class="headerlink" title="在ubuntu创建工程"></a>在ubuntu创建工程</h2><ul>
<li>在windows下在E盘创建一个文件夹叫udplinux</li>
<li>在WSL通过命令<code>cd /mnt/e/udplinux</code>移动到目录中</li>
<li>通过命令<code>dotnet new console</code>创建一个新的工程</li>
<li>在VSCode中打开工程，windows下打开更友善？</li>
<li>增加一个reference文件夹以存放需要引用的dll，并放入udpcore.dll, loongegg.loonglog.dll等文件</li>
<li>修改配置文件udplinux.csproj<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Project</span> <span class="attr">Sdk</span>=<span class="string">"Microsoft.NET.Sdk"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">OutputType</span>&gt;</span>Exe<span class="tag">&lt;/<span class="name">OutputType</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">TargetFramework</span>&gt;</span>netcoreapp3.1<span class="tag">&lt;/<span class="name">TargetFramework</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">PropertyGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Reference</span> <span class="attr">Include</span>=<span class="string">"LoongEgg.LoongLog"</span> <span class="attr">HintPath</span>=<span class="string">"reference\LoongEgg.LoongLog.dll"</span> <span class="attr">SpecificVersion</span>=<span class="string">"False"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">Reference</span> <span class="attr">Include</span>=<span class="string">"lesson.UdpCore"</span> <span class="attr">HintPath</span>=<span class="string">"reference\lesson.UdpCore.dll"</span> <span class="attr">SpecificVersion</span>=<span class="string">"False"</span>/&gt;</span> </span><br><span class="line">  <span class="tag">&lt;/<span class="name">ItemGroup</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">Project</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="两个平台使用的是一样的代码"><a href="#两个平台使用的是一样的代码" class="headerlink" title="两个平台使用的是一样的代码~"></a>两个平台使用的是一样的代码~</h2></li>
</ul>
<hr>
<h2 id="发送端"><a href="#发送端" class="headerlink" title="发送端"></a>发送端</h2><h3 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpSender.Net45</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger | Loggers.DebugLogger);</span><br><span class="line">            <span class="keyword">var</span> sender = <span class="keyword">new</span> LoongEgg.UdpCore.UdpSender(<span class="number">2233</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">bool</span> stop = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Enter a message or stop/s to exit"</span>);</span><br><span class="line">                <span class="keyword">string</span> input = Console.ReadLine();</span><br><span class="line">                stop = input.ToLower() == <span class="string">"stop"</span> | input.ToLower() == <span class="string">"s"</span>;</span><br><span class="line">                sender.SendAsync(<span class="string">$"<span class="subst">&#123;input&#125;</span>"</span>);</span><br><span class="line">            &#125; <span class="keyword">while</span> (!stop);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="接收端"><a href="#接收端" class="headerlink" title="接收端"></a>接收端</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpReceiver.Net45</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br><span class="line"></span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger | Loggers.DebugLogger);</span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> LoongEgg.UdpCore.UdpReceiver(<span class="number">2233</span>);</span><br><span class="line">            receiver.ReaderAsync().Wait();</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"Good bye~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<hr>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-6.在linux中运行.netcore版的接收器</title>
    <url>/2020/06/14/C-Udp-6-%E5%9C%A8linux%E4%B8%AD%E8%BF%90%E8%A1%8C-netcore%E7%89%88%E7%9A%84%E6%8E%A5%E6%94%B6%E5%99%A8/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>  踩坑，填坑，在VS中创建跨平台的.netcore的UdpReceiver控制台实例，running in linux</p>
<h3 id="注意（Caution-大写加粗）"><a href="#注意（Caution-大写加粗）" class="headerlink" title="注意（Caution, 大写加粗）"></a>注意（Caution, 大写加粗）</h3><p>由于引用的Newtonsoft.Json在VS Code使用Nuget添加引用会造成大坑（这就是我一直抵触SB无脑Nuget的原因, 倡导使用简单的库，而不是牛逼但是复杂，出了天坑都不会填），但是在VisualStudio中使用没有问题（所以怪我不会正确引用？）</p>
<ul>
<li>BUG in VS Code when using nuget to add reference<blockquote>
<p>‘Newtonsoft.Json’ already has a dependency defined for ‘Microsoft.CSharp’    </p>
</blockquote>
</li>
</ul>
<p>更糟糕的是，我看了官方的issues，人家说这个不是bug，而且由于这个牛逼的库包含在了.NetCore 3.0 的Microsoft.Sharp中，所以可能只要你在自己的库中依赖过之后，再引用自己的库中都会完蛋。</p>
<hr>
<iframe  width="740" height="576"  src="//player.bilibili.com/player.html?bvid=BV1qp4y1D7av&cid=201853226&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe>


<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1.系列主题"></a>1.系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.DependencyInjection</strong> IoC container , you can get it from nuget or my <a href="https://github.com/loongEgg/DependencyInjection" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.MvvmCore</strong>  an OpenSource cross-platform &amp; cross-framework Mvvm lib , you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.MvvmCore" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取（Realse）"><a href="#5-发行版获取（Realse）" class="headerlink" title="5.发行版获取（Realse）"></a>5.发行版获取（Realse）</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="解决方案（Solution）"><a href="#解决方案（Solution）" class="headerlink" title="解决方案（Solution）"></a>解决方案（Solution）</h2><h3 id="1-在VS中创建跨平台应用-Creat-a-netcore-console-in-VS"><a href="#1-在VS中创建跨平台应用-Creat-a-netcore-console-in-VS" class="headerlink" title="1.在VS中创建跨平台应用(Creat a .netcore console in VS)"></a>1.在VS中创建跨平台应用(Creat a .netcore console in VS)</h3><ul>
<li>添加 &gt; 新建项目 &gt; .netcore &gt; console</li>
<li>添加引用, nuget search and install <strong>LoongEgg.UdpCore</strong></li>
</ul>
<p><strong>坑爹提醒(Caution, super buggy)</strong></p>
<ul>
<li>在linux的.netcore sdk 3.0 <strong>DO NOT SUPPORT</strong>.netcore 2.0 app, 所以只能使用VS2019创建.netcore3.0的console<br>是不是开发python划时代的2.0-&gt;3.0的那波人跑去开发C#了，各种割裂</li>
<li>在VS2019中引用的包的依赖，无法在Nuget中更新</li>
<li>VS2019创建的项目，在linux中<code>dotnet run</code>后，VS中会出错，只能重生成<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpReceiver.Net45</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br><span class="line"></span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger);</span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> LoongEgg.UdpCore.UdpReceiver(<span class="number">2233</span>);</span><br><span class="line">            receiver.ReaderAsync().Wait();</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"Good bye~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li>
<li>生成项目(build)</li>
</ul>
<h3 id="2-在linux中运行（running-in-linux）"><a href="#2-在linux中运行（running-in-linux）" class="headerlink" title="2.在linux中运行（running in linux）"></a>2.在linux中运行（running in linux）</h3><blockquote>
<p>使用Windows 10中的WSL安装的<strong>Ubuntu18.04LTS</strong>为例，很多新东西都是坑，能不作就不要作</p>
</blockquote>
<h4 id="WSL-Ubuntun-command-tips"><a href="#WSL-Ubuntun-command-tips" class="headerlink" title="WSL Ubuntun command tips:"></a>WSL Ubuntun command tips:</h4><ul>
<li><code>ls</code> 查看当前目录下有什么鬼东西</li>
<li><code>cd /mnt</code> goto my computer</li>
<li><code>cd d</code> goto driver D</li>
<li><code>cd ..</code> 返回上一级</li>
<li><code>cd FOLDER_NAME</code> 移动到指定的文件夹</li>
<li><code>dotnet new console</code> 在当前目录下创建一个.netcore控制台，项目名称与目录名称相同</li>
<li><code>dotnet run</code> 运行.netcore程序，当前目录必须要有.netcore项目，并且有PROJECT_NAME.csproject文件</li>
<li><code>clear</code> 清屏<h4 id="Move-to-YOU-SOLUTION-FOLDER-in-wsl"><a href="#Move-to-YOU-SOLUTION-FOLDER-in-wsl" class="headerlink" title="Move to YOU_SOLUTION_FOLDER in wsl"></a>Move to YOU_SOLUTION_FOLDER in wsl</h4><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">king@DESKTOP-N1M9MC7:~$ <span class="built_in">cd</span> /mnt/e</span><br><span class="line">king@DESKTOP-N1M9MC7:/mnt/e$ <span class="built_in">cd</span> linux/UdpReceiver.NetCoreLinux/</span><br><span class="line">king@DESKTOP-N1M9MC7:/mnt/e/linux/UdpReceiver.NetCoreLinux$ ls</span><br><span class="line">Program.cs  UdpReceiver.NetCoreLinux.csproj  bin  obj</span><br><span class="line">king@DESKTOP-N1M9MC7:/mnt/e/linux/UdpReceiver.NetCoreLinux$ dotnet run</span><br><span class="line">FXXK M$!</span><br><span class="line">06/14/2020 10:40:33 [ Info ] -&gt; E:\Published\LoongEgg.UdpCore\LoongEgg.UdpCore\UdpReceiver.cs &gt; .ctor() &gt; <span class="keyword">in</span> line[ 41]: Listening to Port=2233, GroupAddress=</span><br><span class="line">06/14/2020 10:40:33 [ Dbug ] -&gt; E:\Published\LoongEgg.UdpCore\LoongEgg.UdpCore\UdpReceiver.cs &gt; ReaderAsync() &gt; <span class="keyword">in</span> line[ 61]: Listening...</span><br></pre></td></tr></table></figure>
<h2 id="坑爹提醒（Caution-super-buggy"><a href="#坑爹提醒（Caution-super-buggy" class="headerlink" title="坑爹提醒（Caution, super buggy)"></a>坑爹提醒（Caution, super buggy)</h2>重启VS，重开.sln不然满屏错误（reopen .sln）</li>
</ul>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>.netcore</tag>
        <tag>linux</tag>
        <tag>cross platform</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-5.ViewModel中发送功能的实现</title>
    <url>/2020/06/13/C-Udp-5-ViewModel%E4%B8%AD%E5%8F%91%E9%80%81%E5%8A%9F%E8%83%BD%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><h2 id="在ViewModel中利用属性改变事件发起Udp通信"><a href="#在ViewModel中利用属性改变事件发起Udp通信" class="headerlink" title="  在ViewModel中利用属性改变事件发起Udp通信"></a>  在ViewModel中利用属性改变事件发起Udp通信</h2><h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1.系列主题"></a>1.系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2.目标框架(target framework)"></a>2.目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3.项目依赖（Dependency）"></a>3.项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.DependencyInjection</strong> IoC container , you can get it from nuget or my <a href="https://github.com/loongEgg/DependencyInjection" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.MvvmCore</strong>  an OpenSource cross-platform &amp; cross-framework Mvvm lib , you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.MvvmCore" target="_blank" rel="noopener">github</a></li>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4.项目地址(Source code)"></a>4.项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5.发行版获取"></a>5.发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="在ViewModel中增加属性改变处理事件"><a href="#在ViewModel中增加属性改变处理事件" class="headerlink" title="在ViewModel中增加属性改变处理事件"></a>在ViewModel中增加属性改变处理事件</h2><ul>
<li>AltPackViewModel.cs<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">readonly</span> UdpSender Sender;</span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 会启动Udp发送器的实例，默认采用组播模式，只需设置端口号一致即可接收到</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="config"&gt;</span>json配置实例<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">AltPackViewModel</span>(<span class="params">JsonPackConfig config, <span class="keyword">int</span> port</span>) : <span class="title">this</span>(<span class="params">config</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    Gps.PropertyChanged += OnPropertyChanged;</span><br><span class="line">    Sender = <span class="keyword">new</span> UdpSender(port, <span class="literal">true</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 当属性改变时，调用Udp发送功能</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">OnPropertyChanged</span>(<span class="params"><span class="keyword">object</span> sender, PropertyChangedEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (e.PropertyName == <span class="keyword">nameof</span>(AltViewModel.Readout))</span><br><span class="line">    &#123;</span><br><span class="line">        Sender?.SendAsync(<span class="string">$"Gps=<span class="subst">&#123;Gps.Readout&#125;</span>"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="更改程序启动代码"><a href="#更改程序启动代码" class="headerlink" title="更改程序启动代码"></a>更改程序启动代码</h2></li>
<li>App.xaml.cs<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.DependencyInjection;</span><br><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> LoongEgg.UdpCore;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpJsonSender.WPF</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> App.xaml 的交互逻辑</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">partial</span> <span class="keyword">class</span> <span class="title">App</span> : <span class="title">Application</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnStartup</span>(<span class="params">StartupEventArgs e</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">base</span>.OnStartup(e);</span><br><span class="line">            IoC = <span class="keyword">new</span> Container();</span><br><span class="line"></span><br><span class="line">            Logger.EnableDebugLogger();</span><br><span class="line">            <span class="keyword">var</span> config = JsonPackConfig.DeserializeFromFile(AppDomain.CurrentDomain.BaseDirectory + <span class="string">"AltPack.json"</span>);</span><br><span class="line">            IoC.AddOrUpdate(<span class="keyword">new</span> AltPackViewModel( config, <span class="number">2233</span>)); <span class="comment">// 端口号与接收器一致</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 依赖注入容器</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> Container IoC &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
</li>
</ul>
<hr>
<h2 id="运行测试（注意，如果使用了LoongEgg-LoongLog可以在输出中跟踪程序运行情况）"><a href="#运行测试（注意，如果使用了LoongEgg-LoongLog可以在输出中跟踪程序运行情况）" class="headerlink" title="运行测试（注意，如果使用了LoongEgg.LoongLog可以在输出中跟踪程序运行情况）"></a>运行测试（注意，如果使用了LoongEgg.LoongLog可以在输出中跟踪程序运行情况）</h2><h3 id="1-启动WPF程序"><a href="#1-启动WPF程序" class="headerlink" title="1.启动WPF程序"></a>1.启动WPF程序</h3><h3 id="2-启动前面创建的接收端"><a href="#2-启动前面创建的接收端" class="headerlink" title="2.启动前面创建的接收端"></a>2.启动前面创建的<a href="https://loongegg.github.io/2020/06/13/C-Udp-2-%E6%94%B6%E5%8F%91%E9%80%9A%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%88%9B%E5%BB%BA/">接收端</a></h3><h3 id="3-拖动GPS的Slider条检查程序运行情况"><a href="#3-拖动GPS的Slider条检查程序运行情况" class="headerlink" title="3.拖动GPS的Slider条检查程序运行情况"></a>3.拖动GPS的Slider条检查程序运行情况</h3>]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>json</tag>
        <tag>MVVM</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/类型变换-1.去空格并以指定字符分割字符串</title>
    <url>/2020/06/18/C-%E7%B1%BB%E5%9E%8B%E5%8F%98%E6%8D%A2-1-%E5%8E%BB%E7%A9%BA%E6%A0%BC%E5%B9%B6%E4%BB%A5%E6%8C%87%E5%AE%9A%E5%AD%97%E7%AC%A6%E5%88%86%E5%89%B2%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="StringExtensions-cs"><a href="#StringExtensions-cs" class="headerlink" title="StringExtensions.cs"></a>StringExtensions.cs</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">class</span> <span class="title">StringExtensions</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 以扩展属性的形式分割字符串为字符串数组</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;example&gt;</span><span class="doctag">&lt;code&gt;</span>YourString.SplitAndRemoveSpace(',', '\t');<span class="doctag">&lt;/code&gt;</span><span class="doctag">&lt;/example&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="self"&gt;</span><span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="seprator"&gt;</span>用来分割的字符们<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">string</span>[] <span class="title">SplitAndRemoveSpace</span>(<span class="params"><span class="keyword">this</span> <span class="keyword">string</span> self, <span class="keyword">params</span> <span class="keyword">char</span>[] seprator</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">string</span> spaceRemoved = self.Replace(<span class="string">" "</span>, <span class="keyword">string</span>.Empty);</span><br><span class="line">        <span class="keyword">string</span>[] splited = spaceRemoved.Split(seprator, StringSplitOptions.RemoveEmptyEntries);</span><br><span class="line">        <span class="keyword">return</span> splited;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>C#类型变换&amp;扩展属性</category>
      </categories>
      <tags>
        <tag>C#扩展属性</tag>
        <tag>string</tag>
      </tags>
  </entry>
  <entry>
    <title>WPF/Xaml技巧-1.TypeConverter实现自定义范围</title>
    <url>/2020/06/18/WPF-Xaml%E6%8A%80%E5%B7%A7-1-TypeConverter%E5%AE%9E%E7%8E%B0%E8%87%AA%E5%AE%9A%E4%B9%89%E8%8C%83%E5%9B%B4/</url>
    <content><![CDATA[<h2 id="Range-cs"><a href="#Range-cs" class="headerlink" title="Range.cs"></a>Range.cs</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line">[<span class="meta">TypeConverter(typeof(RangeConverter))</span>]</span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">Range</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> From &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> To &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> Max =&gt; Math.Max(From, To);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> Min =&gt; Math.Min(From, To);</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">double</span> Distance =&gt; Math.Abs(Max - Min);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="RangeConverter"><a href="#RangeConverter" class="headerlink" title="RangeConverter"></a>RangeConverter</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title">RangeConverter</span> : <span class="title">TypeConverter</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">bool</span> <span class="title">CanConvertFrom</span>(<span class="params">ITypeDescriptorContext context, Type sourceType</span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">if</span> (sourceType == <span class="keyword">typeof</span>(<span class="keyword">string</span>))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">base</span>.CanConvertFrom(context, sourceType);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">object</span> <span class="title">ConvertFrom</span>(<span class="params">ITypeDescriptorContext context, CultureInfo culture, <span class="keyword">object</span> <span class="keyword">value</span></span>)</span></span><br><span class="line"><span class="function"></span>    &#123;</span><br><span class="line">        <span class="keyword">var</span> strs = <span class="keyword">value</span>.ToString().SplitAndRemoveSpace(<span class="string">','</span>);</span><br><span class="line">        <span class="keyword">if</span> (strs.Any())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">foreach</span> (<span class="keyword">var</span> s <span class="keyword">in</span> strs)</span><br><span class="line">            &#123;</span><br><span class="line">                Debug.WriteLine(s);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">double</span> d0;</span><br><span class="line">        <span class="keyword">double</span> d1;</span><br><span class="line">        <span class="keyword">if</span> (strs.Length == <span class="number">2</span></span><br><span class="line">            &amp;&amp; <span class="keyword">double</span>.TryParse(strs[<span class="number">0</span>], <span class="keyword">out</span> d0)</span><br><span class="line">            &amp;&amp; <span class="keyword">double</span>.TryParse(strs[<span class="number">1</span>], <span class="keyword">out</span> d1))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> Range &#123; From = d0, To = d1 &#125;;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">base</span>.ConvertFrom(context, culture, <span class="keyword">value</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>WPF/Xaml</category>
      </categories>
      <tags>
        <tag>WPF</tag>
        <tag>Xaml</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows中安装Linux子系统和VSCode</title>
    <url>/2020/06/14/%E5%9C%A8Windows%E4%B8%AD%E5%AE%89%E8%A3%85Linux%E5%AD%90%E7%B3%BB%E7%BB%9F%E5%92%8CVSCode/</url>
    <content><![CDATA[<iframe   width="740" height="576"  src="//player.bilibili.com/player.html?aid=583574175&bvid=BV1Sz4y1Q7iK&cid=201919405&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>

<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>特点<br>基于WSL安装，不需要虚拟机，不需要双系统</li>
<li>步骤<br>WSL功能启用, Ubuntu系统安装，换源，VS Code安装</li>
</ul>
<hr>
<h2 id="1-WSL功能启用"><a href="#1-WSL功能启用" class="headerlink" title="1.WSL功能启用"></a>1.WSL功能启用</h2><p>开始菜单 &gt; 设置 &gt; 应用 &gt; 程序和功能(右上角) &gt; 启用或关闭Windows功能(左上角)</p>
<blockquote>
<p>适用于Linux的Windows子系统 &gt; 重启</p>
</blockquote>
<h2 id="2-Ubuntu18-04LTS安装-2020年建议先用这个"><a href="#2-Ubuntu18-04LTS安装-2020年建议先用这个" class="headerlink" title="2.Ubuntu18.04LTS安装(2020年建议先用这个)"></a>2.Ubuntu18.04LTS安装(2020年建议先用这个)</h2><p>搜索（开始菜单旁边那个），输入store &gt; microsoft store &gt; 搜索ubuntu &gt; 安装18.04LTS</p>
<h2 id="3-Ubuntu换源"><a href="#3-Ubuntu换源" class="headerlink" title="3.Ubuntu换源"></a>3.Ubuntu换源</h2><ul>
<li>启动ubuntu<br>直接在开始菜单点图标，第一次打开要创建账号和密码<h3 id="tips"><a href="#tips" class="headerlink" title="tips:"></a>tips:</h3><ul>
<li>记得拿小本子记好密码，不要乱输入忘了，短一点就好，不要有特殊符号不要数字开头</li>
<li>linux下密码输入没有占位符提醒</li>
</ul>
</li>
</ul>
<h3 id="linux-command"><a href="#linux-command" class="headerlink" title="linux command:"></a>linux command:</h3><pre><code>- `ls` 查看当前目录下有什么鬼东西
- `cd /mnt` goto my computer
- `cd d` goto driver D
- `cd ..` 返回上一级
- `cd FOLDER_NAME` 移动到指定的文件夹
- `dotnet new console` 在当前目录下创建一个.netcore控制台，项目名称与目录名称相同
- `dotnet run` 运行.netcore程序，当前目录必须要有.netcore项目，并且有PROJECT_NAME.csproject文件
- `clear` 清屏
- `sudo apt-get install XX` 安装XX软件</code></pre><h3 id="换源文件"><a href="#换源文件" class="headerlink" title="换源文件"></a>换源文件</h3><ul>
<li>移动当前目录 cd /etc/apt/</li>
<li>备份源文件 sudo cp sources.list sources.list.bak</li>
<li>修改源文件 sudo vim sources.list</li>
<li>按两下g让光标到开头</li>
<li>按d, 然后shift+g删除所有内容</li>
<li>复制以下源<figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line">deb http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br><span class="line">deb-src http:&#x2F;&#x2F;mirrors.aliyun.com&#x2F;ubuntu&#x2F; bionic-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure></li>
<li>按i进入插入模式（左下角显示INSERT），右键粘贴</li>
<li>ESC退出插入模式</li>
<li>:wq退出</li>
<li>确认文件已更新 cat sources.list</li>
</ul>
<h3 id="更新源"><a href="#更新源" class="headerlink" title="更新源"></a>更新源</h3><ul>
<li>sudo apt-get update</li>
<li>sudo apt-get upgrade</li>
</ul>
<h3 id="安装VS-Code"><a href="#安装VS-Code" class="headerlink" title="安装VS Code"></a>安装VS Code</h3><ul>
<li>输入code没有安装会自动安装</li>
<li>安装好后再输入变成启动 </li>
</ul>
<hr>
]]></content>
      <tags>
        <tag>linux</tag>
        <tag>WSL</tag>
        <tag>VSCode</tag>
      </tags>
  </entry>
  <entry>
    <title>在Windows中使用VSCode远程开发ubuntu中的.netcore项目</title>
    <url>/2020/06/14/%E5%9C%A8Windows%E4%B8%AD%E4%BD%BF%E7%94%A8VSCode%E8%BF%9C%E7%A8%8B%E5%BC%80%E5%8F%91ubuntu%E4%B8%AD%E7%9A%84-netcore%E9%A1%B9%E7%9B%AE/</url>
    <content><![CDATA[<hr>
<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><ul>
<li>特点<br>文件在windows中方便管理，开发环境在linux调试效果真实</li>
<li>注意<br>本文章写于2020年，基于WSL中的ubuntu18.04LTS, 目标为.netcore 3.1 sdk<br>可能缺少一些插件比如C#在VS Code插件中安装，有些插件会自动提示安装，要记得点yes比如VS code的WSL插件</li>
</ul>
<hr>
<h2 id="1-dotnetcore-sdk-安装"><a href="#1-dotnetcore-sdk-安装" class="headerlink" title="1.dotnetcore sdk 安装"></a>1.dotnetcore sdk 安装</h2><ul>
<li>官网信息<a href="https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-ubuntu" target="_blank" rel="noopener">https://docs.microsoft.com/zh-cn/dotnet/core/install/linux-ubuntu</a></li>
</ul>
<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">wget https://packages.microsoft.com/config/ubuntu/18.04/packages-microsoft-prod.deb -O packages-microsoft-prod.deb</span><br><span class="line">sudo dpkg -i packages-microsoft-prod.deb</span><br></pre></td></tr></table></figure>

<figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt-get update; \</span><br><span class="line">sudo apt-get install -y apt-transport-https &amp;&amp; \</span><br><span class="line">sudo apt-get update &amp;&amp; \</span><br><span class="line">sudo apt-get install -y dotnet-sdk-3.1</span><br></pre></td></tr></table></figure>
<ul>
<li>检查安装情况 dotnet -v<h2 id="2-创建-netcore-console"><a href="#2-创建-netcore-console" class="headerlink" title="2.创建.netcore console"></a>2.创建.netcore console</h2></li>
<li>在Windows中某一盘下面，比如我在e:\linux\netcoretest\创建了一个文件夹</li>
<li>在linux下移动进去 cd /mnt/e/linux/netcoretest</li>
<li>在linux下创建项目 dotnet new console</li>
<li>在linux下运行项目 dotnet run 会显示：<blockquote>
<p>Hello World!</p>
</blockquote>
</li>
<li>在windows下打开文件夹<ul>
<li>更改Hello World!为Hello loongegg.github.io!并保存</li>
</ul>
</li>
<li>在linux下运行项目输出  dotnet run  会显示：<blockquote>
<p>Hello loongegg.github.io!</p>
</blockquote>
</li>
</ul>
<h2 id=""><a href="#" class="headerlink" title="~"></a>~</h2>]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>netcore</tag>
      </tags>
  </entry>
  <entry>
    <title>WPF/Xaml技巧-2.给自定义frameworkelement加上文字FormattedText</title>
    <url>/2020/06/19/WPF-Xaml%E6%8A%80%E5%B7%A7-2-%E7%BB%99%E8%87%AA%E5%AE%9A%E4%B9%89frameworkelement%E5%8A%A0%E4%B8%8A%E6%96%87%E5%AD%97FormattedText/</url>
    <content><![CDATA[<figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System.ComponentModel;</span><br><span class="line"><span class="keyword">using</span> System.Globalization;</span><br><span class="line"><span class="keyword">using</span> System.Windows;</span><br><span class="line"><span class="keyword">using</span> System.Windows.Media;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com </span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/19 12:45:32</span></span><br><span class="line"><span class="comment"> | 主要用途：</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> | 时间	       版本        更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">WpfControlDevelopment.Demo</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">SingleDigitSlider</span> : <span class="title">FrameworkElement</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前读数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        [<span class="meta">Category(<span class="meta-string">"Loong Egg"</span>)</span>]</span><br><span class="line">        [<span class="meta">Description(<span class="meta-string">"当前读数"</span>)</span>]</span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">double</span> Readout</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span> &#123; <span class="keyword">return</span> (<span class="keyword">double</span>)GetValue(ReadoutProperty); &#125;</span><br><span class="line">            <span class="keyword">set</span> &#123; SetValue(ReadoutProperty, <span class="keyword">value</span>); &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;see cref="Readout"/&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">readonly</span> DependencyProperty ReadoutProperty = DependencyProperty.Register</span><br><span class="line">            (<span class="keyword">nameof</span>(Readout), <span class="keyword">typeof</span>(<span class="keyword">double</span>), <span class="keyword">typeof</span>(SingleDigitSlider), <span class="keyword">new</span> PropertyMetadata(<span class="keyword">default</span>(<span class="keyword">double</span>)));</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">protected</span> <span class="keyword">override</span> <span class="keyword">void</span> <span class="title">OnRender</span>(<span class="params">DrawingContext drawingContext</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">string</span> testString = <span class="string">"Lorem ipsum dolor sit amet, consectetur adipisicing elit, sed do eiusmod tempor"</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Create the initial formatted text string.</span></span><br><span class="line">            FormattedText formattedText = <span class="keyword">new</span> FormattedText(</span><br><span class="line">                testString,</span><br><span class="line">                CultureInfo.GetCultureInfo(<span class="string">"en-us"</span>),</span><br><span class="line">                FlowDirection.LeftToRight,</span><br><span class="line">                <span class="keyword">new</span> Typeface(<span class="string">"Verdana"</span>),</span><br><span class="line">                <span class="number">32</span>,</span><br><span class="line">                Brushes.Black);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Set a maximum width and height. If the text overflows these values, an ellipsis "..." appears.</span></span><br><span class="line">            formattedText.MaxTextWidth = <span class="number">300</span>;</span><br><span class="line">            formattedText.MaxTextHeight = <span class="number">240</span>;</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use a larger font size beginning at the first (zero-based) character and continuing for 5 characters.</span></span><br><span class="line">            <span class="comment">// The font size is calculated in terms of points -- not as device-independent pixels.</span></span><br><span class="line">            formattedText.SetFontSize(<span class="number">36</span> * (<span class="number">96.0</span> / <span class="number">72.0</span>), <span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use a Bold font weight beginning at the 6th character and continuing for 11 characters.</span></span><br><span class="line">            formattedText.SetFontWeight(FontWeights.Bold, <span class="number">6</span>, <span class="number">11</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use a linear gradient brush beginning at the 6th character and continuing for 11 characters.</span></span><br><span class="line">            formattedText.SetForegroundBrush(</span><br><span class="line">                                    <span class="keyword">new</span> LinearGradientBrush(</span><br><span class="line">                                    Colors.Orange,</span><br><span class="line">                                    Colors.Teal,</span><br><span class="line">                                    <span class="number">90.0</span>),</span><br><span class="line">                                    <span class="number">6</span>, <span class="number">11</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Use an Italic font style beginning at the 28th character and continuing for 28 characters.</span></span><br><span class="line">            formattedText.SetFontStyle(FontStyles.Italic, <span class="number">28</span>, <span class="number">28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="comment">// Draw the formatted text string to the DrawingContext of the control.</span></span><br><span class="line">            drawingContext.DrawText(formattedText, <span class="keyword">new</span> Point(<span class="number">10</span>, <span class="number">0</span>));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>WPF/Xaml</category>
      </categories>
      <tags>
        <tag>WPF</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/类型变换-2.byteArray数组转为一个字符串</title>
    <url>/2020/06/18/C-%E7%B1%BB%E5%9E%8B%E5%8F%98%E6%8D%A2-2-byteArray%E6%95%B0%E7%BB%84%E8%BD%AC%E4%B8%BA%E4%B8%80%E4%B8%AA%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
    <content><![CDATA[<h2 id="一行大法"><a href="#一行大法" class="headerlink" title="一行大法"></a>一行大法</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">Lesson.UdpCore.Receiver</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger);</span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> UdpReceiver();</span><br><span class="line">            receiver.MessageReceived += Receiver_MessageReceived;</span><br><span class="line">            receiver.ReceiveAsync().Wait();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Receiver_MessageReceived</span>(<span class="params"><span class="keyword">object</span> sender, UdpReceivedEventArgs args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">byte</span>[] buff = args.Buffer;</span><br><span class="line">            <span class="comment">// 一行将byte[]转为字符串</span></span><br><span class="line">            <span class="keyword">string</span> rec = String.Join(<span class="string">","</span>, buff.Select(b =&gt; b.ToString()).ToArray());</span><br><span class="line">            Console.WriteLine(rec);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>C#类型变换&amp;扩展属性</category>
      </categories>
      <tags>
        <tag>string</tag>
        <tag>linq</tag>
      </tags>
  </entry>
  <entry>
    <title>js-1.在VSCode中调试嵌入了JS代码的HTML</title>
    <url>/2020/06/23/js-1-%E5%9C%A8VSCode%E4%B8%AD%E8%B0%83%E8%AF%95%E5%B5%8C%E5%85%A5%E4%BA%86JS%E4%BB%A3%E7%A0%81%E7%9A%84HTMLL/</url>
    <content><![CDATA[<h2 id="0-摘要"><a href="#0-摘要" class="headerlink" title="0.摘要"></a>0.摘要</h2><h3 id="主题"><a href="#主题" class="headerlink" title="主题"></a>主题</h3><p>使用<code>Debugger for Chrome</code>实现在VSCode中调试嵌入了JS代码的HTML</p>
<h3 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h3><ol>
<li>创建项目文件</li>
<li>安装和配置<code>Debugger for Chrome</code></li>
<li>运行和调试</li>
</ol>
<h2 id="1-创建项目文件"><a href="#1-创建项目文件" class="headerlink" title="1.创建项目文件"></a>1.创建项目文件</h2><h3 id="1-文件结构"><a href="#1-文件结构" class="headerlink" title="1) 文件结构"></a>1) 文件结构</h3><figure class="highlight plain"><table><tr><td class="code"><pre><span class="line">+[YOUR_PROJECT_FOLDER]</span><br><span class="line">|----index.html</span><br><span class="line">|----index.js  </span><br><span class="line">|---+.vscode</span><br><span class="line">    |----laubch.json # 这个配置文件在安装插件时会自动插入</span><br></pre></td></tr></table></figure>
<h3 id="2-index-html"><a href="#2-index-html" class="headerlink" title="2) index.html"></a>2) index.html</h3><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="meta-keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">"index.js"</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span> <span class="attr">id</span>=<span class="string">"demo"</span>&gt;</span>A Paragraph<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> <span class="attr">type</span>=<span class="string">"button"</span> <span class="attr">onclick</span>=<span class="string">"myFunction()"</span>&gt;</span>Try it<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h3 id="3-index-js"><a href="#3-index-js" class="headerlink" title="3) index.js"></a>3) index.js</h3><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">myFunction</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="built_in">document</span>.getElementById(<span class="string">"demo"</span>).innerHTML = <span class="string">"My First JavaScript Function"</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="2-安装和配置Debugger-for-Chrome"><a href="#2-安装和配置Debugger-for-Chrome" class="headerlink" title="2.安装和配置Debugger for Chrome"></a>2.安装和配置<code>Debugger for Chrome</code></h2><p>1) 在VSCode的扩展中搜索并安装<code>Debugger for Chrome</code><br>2) 配置出现的<code>launch.json</code></p>
<figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="comment">// Use IntelliSense to learn about possible attributes.</span></span><br><span class="line">    <span class="comment">// Hover to view descriptions of existing attributes.</span></span><br><span class="line">    <span class="comment">// For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span><br><span class="line">    <span class="attr">"version"</span>: <span class="string">"0.2.0"</span>,</span><br><span class="line">    <span class="attr">"configurations"</span>: [</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="attr">"type"</span>: <span class="string">"chrome"</span>,</span><br><span class="line">            <span class="attr">"request"</span>: <span class="string">"launch"</span>,</span><br><span class="line">            <span class="attr">"name"</span>: <span class="string">"Launch Chrome against localhost"</span>,</span><br><span class="line">            <span class="attr">"url"</span>: <span class="string">"http://localhost:8080"</span>,</span><br><span class="line">            <span class="attr">"webRoot"</span>: <span class="string">"$&#123;workspaceFolder&#125;"</span>,</span><br><span class="line">            <span class="attr">"file"</span>: <span class="string">"$&#123;file&#125;"</span> # 这一行是新增的</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="3-调试和运行"><a href="#3-调试和运行" class="headerlink" title="3.调试和运行"></a>3.调试和运行</h2><ul>
<li>要在打开的当前文件<code>index.html</code>中<code>F5</code>运行</li>
<li>在运行弹出的窗口选<code>chrome</code></li>
<li>可以设置断点</li>
</ul>
]]></content>
      <tags>
        <tag>VSCode</tag>
        <tag>HTML</tag>
        <tag>JS</tag>
      </tags>
  </entry>
</search>
