<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>C#/Udp-1.收发通信基础库的实现</title>
    <url>/2020/06/13/C-Udp-1-%E6%94%B6%E5%8F%91%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80%E5%BA%93%E7%9A%84%E5%AE%9E%E7%8E%B0/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>基本UDP收发通信基础库的实现</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1. 系列主题"></a>1. 系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2. 目标框架(target framework)"></a>2. 目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3. 项目依赖（Dependency）"></a>3. 项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4. 项目地址(Source code)"></a>4. 项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5. 发行版获取"></a>5. 发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="UdpSender-cs"><a href="#UdpSender-cs" class="headerlink" title="UdpSender.cs"></a>UdpSender.cs</h2><h3 id="1-Properties"><a href="#1-Properties" class="headerlink" title="1.Properties"></a>1.Properties</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> IP端口</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> IPEndPoint EndPoint &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 组地址</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> GroupAddress &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure>

<h3 id="2-Constructors"><a href="#2-Constructors" class="headerlink" title="2.Constructors"></a>2.Constructors</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> Udp发送器的构造器</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isBroadcast"&gt;</span>组播?<span class="doctag">&lt;/param&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isIpV6"&gt;</span>IpV6模式?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UdpSender</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">bool</span> isBroadcast,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">string</span> groupAddress = <span class="literal">null</span>,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">bool</span> isIpV6 = <span class="literal">false</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GroupAddress = groupAddress;</span><br><span class="line">    <span class="keyword">string</span> hostName = Dns.GetHostName();</span><br><span class="line">    EndPoint = GetIPEndPoint(port, isBroadcast, hostName, groupAddress, isIpV6).Result;</span><br><span class="line">    GroupAddress = groupAddress;</span><br><span class="line">    <span class="keyword">string</span> hostName = Dns.GetHostName();</span><br><span class="line">    EndPoint = GetIPEndPoint(port, isBroadcast, hostName, groupAddress, isIpV6).Result;</span><br><span class="line">    Debug.WriteLine(</span><br><span class="line">        <span class="string">$"IPEndPoint: "</span></span><br><span class="line">        + <span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(port)&#125;</span>=<span class="subst">&#123;port&#125;</span>, i<span class="subst">&#123;<span class="keyword">nameof</span>(isBroadcast)&#125;</span>=<span class="subst">&#123;isBroadcast&#125;</span>, "</span></span><br><span class="line">        + <span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(hostName)&#125;</span>=<span class="subst">&#123;hostName&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(groupAddress)&#125;</span>=<span class="subst">&#123;groupAddress&#125;</span>, "</span></span><br><span class="line">        + <span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(isIpV6)&#125;</span>=<span class="subst">&#123;isIpV6&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Public-Methods"><a href="#3-Public-Methods" class="headerlink" title="3.Public Methods"></a>3.Public Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 发送信息</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="message"&gt;</span>待发送的信息<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> <span class="keyword">void</span> <span class="title">SendAsync</span>(<span class="params"><span class="keyword">string</span> message</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">string</span> localhost = Dns.GetHostName();</span><br><span class="line">        <span class="keyword">using</span> (<span class="keyword">var</span> client = <span class="keyword">new</span> UdpClient())</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                client.JoinMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">byte</span>[] datagram = Encoding.UTF8.GetBytes(message);</span><br><span class="line">            <span class="keyword">await</span> client.SendAsync(datagram, datagram.Length, EndPoint);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                client.DropMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> ex;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="4-Private-Methods"><a href="#4-Private-Methods" class="headerlink" title="4. Private Methods"></a>4. Private Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 获取指定的IP端口</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isBroadcast"&gt;</span>组播?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="hostName"&gt;</span>主机名称<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="isIpV6"&gt;</span>IpV6模式?<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">async</span> Task&lt;IPEndPoint&gt; <span class="title">GetIPEndPoint</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">int</span> port,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">bool</span> isBroadcast,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">string</span> hostName,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">string</span> groupAddress,</span></span></span><br><span class="line"><span class="function"><span class="params">    <span class="keyword">bool</span> isIpV6</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    IPEndPoint endpoint;</span><br><span class="line">    <span class="keyword">try</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (isBroadcast)</span><br><span class="line">        &#123;</span><br><span class="line">            endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Broadcast, port);</span><br><span class="line">            Logger.Debug(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(isBroadcast)&#125;</span>=<span class="subst">&#123;isBroadcast&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(port)&#125;</span>=<span class="subst">&#123;port&#125;</span> "</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (hostName != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            IPHostEntry hostEntry = <span class="keyword">await</span> Dns.GetHostEntryAsync(hostName);</span><br><span class="line">            IPAddress address;</span><br><span class="line">            <span class="keyword">if</span> (isIpV6)</span><br><span class="line">            &#123;</span><br><span class="line">                address = hostEntry.AddressList.Where(</span><br><span class="line">                    a =&gt; a.AddressFamily == AddressFamily.InterNetworkV6</span><br><span class="line">                ).FirstOrDefault();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span></span><br><span class="line">            &#123;</span><br><span class="line">                address = hostEntry.AddressList.Where(</span><br><span class="line">                    a =&gt; a.AddressFamily == AddressFamily.InterNetwork</span><br><span class="line">                ).FirstOrDefault();</span><br><span class="line">            &#125;</span><br><span class="line">            endpoint = <span class="keyword">new</span> IPEndPoint(address, port);</span><br><span class="line">            Logger.Debug(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(hostName)&#125;</span>=<span class="subst">&#123;hostName&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(address)&#125;</span>=<span class="subst">&#123;address&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(isIpV6)&#125;</span>=<span class="subst">&#123;isIpV6&#125;</span>"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (groupAddress != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            endpoint = <span class="keyword">new</span> IPEndPoint(IPAddress.Parse(groupAddress), port);</span><br><span class="line">            Logger.Debug(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(groupAddress)&#125;</span>=<span class="subst">&#123;groupAddress&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(port)&#125;</span>=<span class="subst">&#123;port&#125;</span> "</span>);</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> InvalidOperationException(<span class="string">$"<span class="subst">&#123;<span class="keyword">nameof</span>(hostName)&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(isBroadcast)&#125;</span>, or <span class="subst">&#123;<span class="keyword">nameof</span>(groupAddress)&#125;</span> must be set"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">throw</span> ex;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> endpoint;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="UdpReceiver-cs"><a href="#UdpReceiver-cs" class="headerlink" title="UdpReceiver.cs"></a>UdpReceiver.cs</h2><h3 id="1-Properties-1"><a href="#1-Properties-1" class="headerlink" title="1.Properties"></a>1.Properties</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 端口号</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">int</span> Port &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 组地址</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">string</span> GroupAddress &#123; <span class="keyword">get</span>; <span class="keyword">private</span> <span class="keyword">set</span>; &#125;</span><br></pre></td></tr></table></figure>
<h3 id="2-Constructors-1"><a href="#2-Constructors-1" class="headerlink" title="2.Constructors"></a>2.Constructors</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 创建一个新的接收器</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="port"&gt;</span>端口号<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="groupAddress"&gt;</span>组地址<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">UdpReceiver</span>(<span class="params"><span class="keyword">int</span> port, <span class="keyword">string</span> groupAddress = <span class="literal">null</span></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    GroupAddress = groupAddress;</span><br><span class="line">    Port = port;</span><br><span class="line">    Logger.Info(<span class="string">$"Listening to <span class="subst">&#123;<span class="keyword">nameof</span>(Port)&#125;</span>=<span class="subst">&#123;Port&#125;</span>, <span class="subst">&#123;<span class="keyword">nameof</span>(GroupAddress)&#125;</span>=<span class="subst">&#123;GroupAddress&#125;</span>"</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="3-Public-Methods-1"><a href="#3-Public-Methods-1" class="headerlink" title="3.Public Methods"></a>3.Public Methods</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> 接收器工作</span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line"><span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">async</span> Task <span class="title">ReaderAsync</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">using</span> (<span class="keyword">var</span> client = <span class="keyword">new</span> UdpClient(Port))</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            Logger.Debug(<span class="string">$"JoinMulticastGroup = <span class="subst">&#123;GroupAddress&#125;</span>"</span>);</span><br><span class="line">            client.JoinMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">bool</span> completed = <span class="literal">false</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            Logger.Debug(<span class="string">"Listening..."</span>);</span><br><span class="line">            UdpReceiveResult result = <span class="keyword">await</span> client.ReceiveAsync();</span><br><span class="line">            <span class="keyword">byte</span>[] datagram = result.Buffer; ;</span><br><span class="line">            <span class="keyword">string</span> received = Encoding.UTF8.GetString(datagram);</span><br><span class="line">            Logger.Info(<span class="string">$"Received (from <span class="subst">&#123;result.RemoteEndPoint.Address.ToString()&#125;</span>)-&gt; <span class="subst">&#123;received&#125;</span>"</span>);</span><br><span class="line">            completed = (received == <span class="string">"closed"</span>);</span><br><span class="line">        &#125; <span class="keyword">while</span> (!completed);</span><br><span class="line">        Logger.Debug(<span class="string">"Receiver closing"</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (GroupAddress != <span class="literal">null</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            client.DropMulticastGroup(IPAddress.Parse(GroupAddress));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-2.收发通信客户端的创建</title>
    <url>/2020/06/13/C-Udp-2-%E6%94%B6%E5%8F%91%E9%80%9A%E4%BF%A1%E5%AE%A2%E6%88%B7%E7%AB%AF%E7%9A%84%E5%88%9B%E5%BB%BA/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>基本UDP收发通信客户端的创建</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1. 系列主题"></a>1. 系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2. 目标框架(target framework)"></a>2. 目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3. 项目依赖（Dependency）"></a>3. 项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4. 项目地址(Source code)"></a>4. 项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5. 发行版获取"></a>5. 发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="发送端"><a href="#发送端" class="headerlink" title="发送端"></a>发送端</h2><h3 id="Program-cs"><a href="#Program-cs" class="headerlink" title="Program.cs"></a>Program.cs</h3><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpSender.Net45</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger | Loggers.DebugLogger);</span><br><span class="line">            <span class="keyword">var</span> sender = <span class="keyword">new</span> LoongEgg.UdpCore.UdpSender(<span class="number">2233</span>, <span class="literal">true</span>);</span><br><span class="line">            <span class="keyword">bool</span> stop = <span class="literal">false</span>;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(<span class="string">"Enter a message or stop/s to exit"</span>);</span><br><span class="line">                <span class="keyword">string</span> input = Console.ReadLine();</span><br><span class="line">                stop = input.ToLower() == <span class="string">"stop"</span> | input.ToLower() == <span class="string">"s"</span>;</span><br><span class="line">                sender.SendAsync(<span class="string">$"<span class="subst">&#123;input&#125;</span>"</span>);</span><br><span class="line">            &#125; <span class="keyword">while</span> (!stop);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
<h2 id="接收端"><a href="#接收端" class="headerlink" title="接收端"></a>接收端</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> LoongEgg.LoongLog;</span><br><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">UdpReceiver.Net45</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            Console.WriteLine(<span class="string">"Hello World!"</span>);</span><br><span class="line"></span><br><span class="line">            Logger.Enable(Loggers.ConsoleLogger | Loggers.DebugLogger);</span><br><span class="line">            <span class="keyword">var</span> receiver = <span class="keyword">new</span> LoongEgg.UdpCore.UdpReceiver(<span class="number">2233</span>);</span><br><span class="line">            receiver.ReaderAsync().Wait();</span><br><span class="line"></span><br><span class="line">            Console.WriteLine(<span class="string">"Good bye~"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<hr>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-4.WPF发送端</title>
    <url>/2020/06/13/C-Udp-4-WPF%E5%8F%91%E9%80%81%E7%AB%AF/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>  创建WPF/C#的UdpSender客户端，并使用MVVM模式完成Name和Unit的绑定</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1. 系列主题"></a>1. 系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-本文主题"><a href="#2-本文主题" class="headerlink" title="2. 本文主题"></a>2. 本文主题</h3><p>class类到json的序列化与反序列化</p>
<h3 id="3-目标框架-target-framework"><a href="#3-目标框架-target-framework" class="headerlink" title="3. 目标框架(target framework)"></a>3. 目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="4-项目依赖（Dependency）"><a href="#4-项目依赖（Dependency）" class="headerlink" title="4. 项目依赖（Dependency）"></a>4. 项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="5-项目地址-Source-code"><a href="#5-项目地址-Source-code" class="headerlink" title="5. 项目地址(Source code)"></a>5. 项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="6-发行版获取"><a href="#6-发行版获取" class="headerlink" title="6. 发行版获取"></a>6. 发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
        <tag>json</tag>
        <tag>WPF</tag>
      </tags>
  </entry>
  <entry>
    <title>C#/Udp-3.class类到json的序列化与反序列化</title>
    <url>/2020/06/13/C-Udp-3-class%E7%B1%BB%E5%88%B0json%E7%9A%84%E5%BA%8F%E5%88%97%E5%8C%96%E4%B8%8E%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
    <content><![CDATA[<h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>class类到json的序列化与反序列化</p>
<h2 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h2><h3 id="1-系列主题"><a href="#1-系列主题" class="headerlink" title="1. 系列主题"></a>1. 系列主题</h3><p>本系列文章，旨在实现使用Json进行配置的Udp收发器 An Udp Sender &amp; Receiver using json file to configure</p>
<h3 id="2-目标框架-target-framework"><a href="#2-目标框架-target-framework" class="headerlink" title="2. 目标框架(target framework)"></a>2. 目标框架(target framework)</h3><ul>
<li><strong>.net framework 4.5</strong> to support using in <strong>windows</strong> with <strong>.net framework &gt;= 4.5</strong></li>
<li><strong>.net standard 2.0</strong> to support using in <strong>linux</strong> with <strong>.net core &gt;= 2.0</strong></li>
</ul>
<h3 id="3-项目依赖（Dependency）"><a href="#3-项目依赖（Dependency）" class="headerlink" title="3. 项目依赖（Dependency）"></a>3. 项目依赖（Dependency）</h3><ul>
<li><strong>LoongEgg.LoongLog</strong> an OpenSource cross-platform &amp; cross-framework log tool, you can get it from nuget or my <a href="https://github.com/loongEgg/LoongEgg.LoongLog" target="_blank" rel="noopener">github</a></li>
<li><strong>Newtonsoft.Json</strong></li>
</ul>
<h3 id="4-项目地址-Source-code"><a href="#4-项目地址-Source-code" class="headerlink" title="4. 项目地址(Source code)"></a>4. 项目地址(Source code)<br></h3><ul>
<li><a href="https://github.com/loongEgg/LoongEgg.UdpCore" target="_blank" rel="noopener">github</a> </li>
</ul>
<h3 id="5-发行版获取"><a href="#5-发行版获取" class="headerlink" title="5. 发行版获取"></a>5. 发行版获取</h3><ul>
<li>Search in nuget: <strong>LoongEgg.UdpCore</strong></li>
</ul>
<hr>
<h2 id="基本json文件"><a href="#基本json文件" class="headerlink" title="基本json文件"></a>基本json文件</h2><figure class="highlight json"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"PackName"</span>: <span class="string">"AltitudePack"</span>,</span><br><span class="line">  <span class="attr">"PackID"</span>: <span class="number">233</span>,</span><br><span class="line">  <span class="attr">"Items"</span>: [</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Name"</span>: <span class="string">"GPS_Alt"</span>,</span><br><span class="line">      <span class="attr">"Unit"</span>: <span class="string">"m"</span>,</span><br><span class="line">      <span class="attr">"Length"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"BigEndian"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Resolution"</span>: <span class="number">1.0</span>,</span><br><span class="line">      <span class="attr">"Signed"</span>: <span class="literal">true</span>,</span><br><span class="line">      <span class="attr">"Maximum"</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">"Minimum"</span>: <span class="number">-100</span></span><br><span class="line">    &#125;,</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="attr">"Name"</span>: <span class="string">"BRAVO_Alt"</span>,</span><br><span class="line">      <span class="attr">"Unit"</span>: <span class="string">"m"</span>,</span><br><span class="line">      <span class="attr">"Length"</span>: <span class="number">2</span>,</span><br><span class="line">      <span class="attr">"BigEndian"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Resolution"</span>: <span class="number">0.5</span>,</span><br><span class="line">      <span class="attr">"Signed"</span>: <span class="literal">false</span>,</span><br><span class="line">      <span class="attr">"Maximum"</span>: <span class="number">100</span>,</span><br><span class="line">      <span class="attr">"Minimum"</span>: <span class="number">-100</span></span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单个数据项定义"><a href="#单个数据项定义" class="headerlink" title="单个数据项定义"></a>单个数据项定义</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com </span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/12 20:24:28</span></span><br><span class="line"><span class="comment"> | 主要用途：数据包中单个数据项的定义</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 单个数据项定义</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">ItemConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据名称</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Name &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 单位</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> Unit &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 字节长度</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">int</span> Length &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 大端在前？</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> BigEndian &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据精度，精度乘以传进来的数据=实际的数值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Resolution &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 有无符号？</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">bool</span> Signed &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据的最大值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Maximum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据的最小值</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">float</span> Minimum &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 打印数据定义信息到字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>格式化后的定义信息<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">$"Name=<span class="subst">&#123;Name&#125;</span>, Unit=<span class="subst">&#123;Unit&#125;</span>, Resolution=<span class="subst">&#123;Resolution&#125;</span>, Signed="</span> </span><br><span class="line">                + (Signed ? <span class="string">"true"</span> : <span class="string">"false"</span>) </span><br><span class="line">                + <span class="string">$", Maximum=<span class="subst">&#123;Maximum&#125;</span>, Minimum=<span class="subst">&#123;Minimum&#125;</span>"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="单个json文件对应的class定义"><a href="#单个json文件对应的class定义" class="headerlink" title="单个json文件对应的class定义"></a>单个json文件对应的class定义</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> Newtonsoft.Json;</span><br><span class="line"><span class="keyword">using</span> System.Collections.Generic;</span><br><span class="line"><span class="keyword">using</span> System.IO;</span><br><span class="line"><span class="keyword">using</span> System.Linq;</span><br><span class="line"><span class="keyword">using</span> System.Text;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"> | 个人微信：InnerGeeker</span></span><br><span class="line"><span class="comment"> | 联系邮箱：LoongEgg@163.com</span></span><br><span class="line"><span class="comment"> | 创建时间：2020/6/12 20:41:39</span></span><br><span class="line"><span class="comment"> | 主要用途：从json文件读取数据包协议</span></span><br><span class="line"><span class="comment"> | 更改记录：</span></span><br><span class="line"><span class="comment"> |			 时间		版本		更改</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> 数据包，可以直接从json文件反序列化</span></span><br><span class="line">    <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">class</span> <span class="title">JsonPackConfig</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前包的名字</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">string</span> PackName &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125; = <span class="string">"[Undefined]"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 当前包的ID号, 注意为单字节无符号数</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">byte</span> PackID &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 包的字节总长度, 注意最大长度为255</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> <span class="keyword">byte</span> Length</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">get</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">                <span class="keyword">if</span> (Items.Any())</span><br><span class="line">                &#123;</span><br><span class="line">                    Items.ForEach(i =&gt; count += i.Length);</span><br><span class="line">                    <span class="keyword">return</span> (<span class="keyword">byte</span>)count;</span><br><span class="line">                &#125;</span><br><span class="line"></span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 数据对象定义的集合</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="keyword">public</span> List&lt;ItemConfig&gt; Items &#123; <span class="keyword">get</span>; <span class="keyword">set</span>; &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 从指定的文件反序列化数据包的定义</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;param name="path"&gt;</span>文件路径<span class="doctag">&lt;/param&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span>反序列化后的数据包<span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> JsonPackConfig <span class="title">DeserializeFromFile</span>(<span class="params"><span class="keyword">string</span> path</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">using</span> (StreamReader reader = File.OpenText(path))</span><br><span class="line">            &#123;</span><br><span class="line">                JsonSerializer serializer = JsonSerializer.Create();</span><br><span class="line">                <span class="keyword">var</span> pack = serializer.Deserialize(reader, <span class="keyword">typeof</span>(JsonPackConfig)) <span class="keyword">as</span> JsonPackConfig;</span><br><span class="line">                <span class="keyword">return</span> pack;</span><br><span class="line">            &#125; </span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将协议转换为json字符串形式</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;returns&gt;</span><span class="doctag">&lt;/returns&gt;</span></span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">string</span> <span class="title">SerializeToJsonString</span>(<span class="params"></span>)</span> =&gt; JsonConvert.SerializeObject(<span class="keyword">this</span>, Formatting.Indented);</span><br><span class="line"></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;summary&gt;</span></span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> 将所有的数据协议项转换为一个字符串</span></span><br><span class="line">        <span class="comment"><span class="doctag">///</span> <span class="doctag">&lt;/summary&gt;</span> </span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">override</span> <span class="keyword">string</span> <span class="title">ToString</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            StringBuilder builder = <span class="keyword">new</span> StringBuilder();</span><br><span class="line">            builder.AppendLine(<span class="string">$"PackName=<span class="subst">&#123;PackName&#125;</span>, PackID=<span class="subst">&#123;PackID&#125;</span>:"</span>);</span><br><span class="line">            <span class="keyword">if</span> (Items.Any())</span><br><span class="line">            &#123;</span><br><span class="line">                Items.ForEach(</span><br><span class="line">                    i =&gt;</span><br><span class="line">                    &#123;</span><br><span class="line">                        builder.AppendLine(i.ToString());</span><br><span class="line">                    &#125;);</span><br><span class="line">                <span class="keyword">return</span> builder.ToString();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> <span class="string">"JsonPackDefinition is undefined"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="运用实例"><a href="#运用实例" class="headerlink" title="运用实例"></a>运用实例</h2><figure class="highlight cs"><table><tr><td class="code"><pre><span class="line"><span class="keyword">using</span> System;</span><br><span class="line"><span class="keyword">using</span> System.Diagnostics;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">LoongEgg.UdpCore.JsonDemo</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="keyword">class</span> <span class="title">Program</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="function"><span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span>(<span class="params"><span class="keyword">string</span>[] args</span>)</span></span><br><span class="line"><span class="function"></span>        &#123;</span><br><span class="line">            <span class="keyword">try</span></span><br><span class="line">            &#123;</span><br><span class="line">                JsonPackConfig pack = JsonPackConfig.DeserializeFromFile(<span class="string">"AltPack.json"</span>);</span><br><span class="line">                Console.WriteLine(<span class="string">"Desializing..."</span>);</span><br><span class="line">                Console.WriteLine(pack.ToString());</span><br><span class="line"></span><br><span class="line">                Console.WriteLine(<span class="string">"Serializing..."</span>);</span><br><span class="line">                Console.WriteLine(pack.SerializeToJsonString());</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">catch</span> (Exception ex)</span><br><span class="line">            &#123;</span><br><span class="line">                Console.WriteLine(ex.Message);</span><br><span class="line">            &#125; </span><br><span class="line"></span><br><span class="line">            Debugger.Break();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>C#/UDP</category>
      </categories>
      <tags>
        <tag>C#</tag>
        <tag>UDP</tag>
        <tag>json</tag>
      </tags>
  </entry>
</search>
